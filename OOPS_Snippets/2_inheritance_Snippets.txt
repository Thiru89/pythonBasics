---------------------------------------------------------------
Inheritance - Object for Parent
---------------------------------------------------------------
class Parent:

    def __init__(self):
        print("Inside Parent Constructor")


class Child(Parent):

    def __init__(self):
        print("Inside Child Constructor")

obj = Parent()

Answer:
Inside Parent Constructor 

---------------------------------------------------------------
Inheritance - Object for Child
---------------------------------------------------------------

class Parent:

    def __init__(self):
        print("Inside Parent Constructor")


class Child(Parent):

    def __init__(self):
        print("Inside Child Constructor")

obj = Child()

Answer:
Inside Child Constructor


---------------------------------------------------------------
Inheritance - invoking parent default constructor from child constructor
---------------------------------------------------------------

class Parent:

    def __init__(self):
        print("Inside Parent Constructor")


class Child(Parent):

    def __init__(self):
        print("Inside Child Constructor")
        super().__init__()

obj = Child()

Answer:
Inside Child Constructor
Inside Parent Constructor



---------------------------------------------------------------
Inheritance - invoking parent parameterized constructor from child default constructor
---------------------------------------------------------------

class Parent:

    def __init__(self, name):
        print("Inside Parent Constructor")


class Child(Parent):

    def __init__(self):
        print("Inside Child Constructor")
        super().__init__("ABC")

obj = Child()

Answer:
Inside Child Constructor
Inside Parent Constructor



---------------------------------------------------------------
Inheritance - invoking parent parameterized constructor from child parameterized constructor
---------------------------------------------------------------
class Parent:

    def __init__(self, name, age):
        print("Inside Parent Constructor")
        self.name = name
        self.age = age
        print(self.name, self.age)


class Child(Parent):

    def __init__(self, name):
        print("Inside Child Constructor")
        self.name = name
        print(self.name)
        super().__init__("ABC", 25)

obj = Child("XYZ")

Answer:
Inside Child Constructor
XYZ
Inside Parent Constructor
ABC 25


---------------------------------------------------------------
Inheritance - invoking parent parameterized constructor from child parameterized constructor
also invoking parent parameterized constructor separately
---------------------------------------------------------------


class Parent:

    def __init__(self, name, age):
        print("Inside Parent Constructor")
        self.name = name
        self.age = age
        print(self.name, self.age)


class Child(Parent):

    def __init__(self, name):
        print("Inside Child Constructor")
        self.name = name
        print(self.name)
        super().__init__("ABC", 25)

obj = Child("XYZ")
obj = Parent("XXX", 10)

Answer:
Inside Child Constructor
XYZ
Inside Parent Constructor
ABC 25
Inside Parent Constructor
XXX 10


---------------------------------------------------------------
Inheritance - using parent objects you cannot call child methods. ( parent objects can only access parent class methods and parent class variables)
---------------------------------------------------------------
class Parent:
    parentvariable =10
    def __init__(self, name, age):
        print("Inside Parent Constructor")
        self.name = name
        self.age = age
    def parentdisplay(self):
        print("Inside Parent display method", self.name)

class Child(Parent):
    childvariable = 100
    def __init__(self, name):
        print("Inside Child Constructor")
        self.name = name

    def childdisplay(self):
        print("Inside child display method", self.name)

obj = Parent("ABC", 24)
obj.parentdisplay()
obj.childdisplay()
obj.childvariable()



Answer:
Traceback (most recent call last):
  File "C:\Users\Vighnahartha\PycharmProjects\PythonBasics\practice.py", line 21, in <module>
    obj.childdisplay()
AttributeError: 'Parent' object has no attribute 'childdisplay'
Inside Parent Constructor
Inside Parent display method ABC



---------------------------------------------------------------
Inheritance - child objects can access both parent as well child class methods, variables
---------------------------------------------------------------

class Parent:
    parentvariable =10
    def __init__(self, name, age):
        print("Inside Parent Constructor")
        self.name = name
        self.age = age
    def parentdisplay(self):
        print("Inside Parent display method", self.name)

class Child(Parent):
    childvariable = 100
    def __init__(self, name):
        print("Inside Child Constructor")
        self.name = name

    def childdisplay(self):
        print("Inside child display method", self.name)

obj = Child("ABC")
print(obj.parentvariable)
obj.parentdisplay()
print(obj.childvariable)
obj.childdisplay()


Answer:
Inside Child Constructor
10
Inside Parent display method ABC
100
Inside child display method ABC

---------------------------------------------------------------
Child objects can access parent method by using super reference
---------------------------------------------------------------
class Parent:
    Classvariable = "classvariable"

    def __init__(self, name, age):
        self.name = name
        self.age = age
        self.displayfun()

    def displayfun(self):
        methodvariable = "methodvariable"
        self.Classvariable = "override by method"
        print(f"Name Parameter: {self.name} \nAge Parameter: {self.age}\nClassVariable: "
              f"{self.Classvariable}\nmethod variable: {methodvariable}")


class Child(Parent):
    childclassvariable = "Childclassvariable"

    def __init__(self, gender):
        self.gender = gender
        super().__init__("XYZ", 10)

    def childmethod(self):
        super().displayfun()


obj = Child("Male")
obj.childmethod()

ANSWER
-------------
Name Parameter: XYZ 
Age Parameter: 10
ClassVariable: override by method
method variable: methodvariable

Name Parameter: XYZ 
Age Parameter: 10
ClassVariable: override by method
method variable: methodvariable
